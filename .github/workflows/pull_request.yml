name: Pull Request Workflow

on: 
  pull_request:
    branches:
      - main

env:
  GO_VERSION: 1.19
  HELM_VERSION: v3.6.3
  PYTHON_VERSION: 3.7 # required for helm tester

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Go Lint
        uses: golangci/golangci-lint-action@v3.3.1
        with:
          args: --timeout=5m --enable exportloopref
          skip-pkg-cache: true
          skip-build-cache: true
          skip-go-installation: true
      
      - name: Run integration tests
        run: make test

  build-operator:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build operator image
        uses: docker/build-push-action@v3
        with:
          tags: ibmcom/operator-for-redis:local
          file: Dockerfile.operator

  build-cluster-node:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build redis node image
        uses: docker/build-push-action@v3
        with:
          tags: ibmcom/node-for-redis:local
          file: Dockerfile.node

  build-metrics:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build redis metrics image
        uses: docker/build-push-action@v3
        with:
          tags: ibmcom/metrics-for-redis:local
          file: Dockerfile.metrics

  validate-helm-charts:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # ct needs history to compare

      - name: Setup Helm
        uses: azure/setup-helm@v3.5
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch=main)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --target-branch=main --check-version-increment=false

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.1 # This is recommended LTS version which includes npm 6.14.10
      - name: Build docs website
        run: |
          npm -v
          node -v
          cd docs
          npm ci
          npm run build

  run-e2e-tests:
    runs-on: ubuntu-latest
    needs: [build-operator, build-cluster-node, build-metrics, validate-helm-charts]
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version: ["1.26", "1.25", "1.24", "1.23"]
        include:
          - kubernetes-version: "1.26"
            kind-node: kindest/node:v1.26.3@sha256:94eb63275ad6305210041cdb5aca87c8562cc50fa152dbec3fef8c58479db4ff
          - kubernetes-version: "1.25"
            kind-node: kindest/node:v1.25.8@sha256:b5ce984f5651f44457edf263c1fe93459df8d5d63db7f108ccf5ea4b8d4d9820
          - kubernetes-version: "1.24"
            kind-node: kindest/node:v1.24.12@sha256:0bdca26bd7fe65c823640b14253ea7bac4baad9336b332c94850f84d8102f873
          - kubernetes-version: "1.23"
            kind-node: kindest/node:v1.23.17@sha256:f935044f60483d33648d8c13decd79557cf3e916363a3c9ba7e82332cb249cba
#          - kubernetes-version: "1.22"
#            kind-node: kindest/node:v1.22.17@sha256:ed0f6a1cd1dcc0ff8b66257b3867e4c9e6a54adeb9ca31005f62638ad555315c
#          - kubernetes-version: "1.21"
#            kind-node: kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
#          - kubernetes-version: "1.20"
#            kind-node: kindest/node:v1.20.15@sha256:6f2d011dffe182bad80b85f6c00e8ca9d86b5b8922cdf433d53575c4c5212248
#          - kubernetes-version: "1.19"
#            kind-node: kindest/node:v1.19.16@sha256:d9c819e8668de8d5030708e484a9fdff44d95ec4675d136ef0a0a584e587f65c
#          - kubernetes-version: "1.18"
#            kind-node: kindest/node:v1.18.20@sha256:738cdc23ed4be6cc0b7ea277a2ebcc454c8373d7d8fb991a7fcdbd126188e6d7
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build images
        run: |
          docker build -f Dockerfile.operator -t ibmcom/operator-for-redis:local .
          docker build -f Dockerfile.node -t ibmcom/node-for-redis:local -t ibmcom/node-for-redis:new .
          docker build -f Dockerfile.metrics -t ibmcom/metrics-for-redis:local .

      - name: kind create cluster
        uses: helm/kind-action@v1.5.0
        with:
          version: v0.14.0
          config: ./test/e2e/kind_config.yml
          cluster_name: kind
          node_image: ${{ matrix.kind-node }}
          wait: 120s
            
      - name: Load Images to KIND
        run: |
          kind load docker-image ibmcom/operator-for-redis:local
          kind load docker-image ibmcom/node-for-redis:local
          kind load docker-image ibmcom/node-for-redis:new
          kind load docker-image ibmcom/metrics-for-redis:local
    
      - name: Install operator-for-redis with Helm
        id: helm
        run: helm install operator-for-redis charts/operator-for-redis --wait --set image.repository=ibmcom/operator-for-redis --set image.tag=local --set logLevel=7
      
      - name: Run e2e tests
        id: e2e
        run: go test -timeout 30m ./test/e2e --kubeconfig=$HOME/.kube/config --ginkgo.v --test.v

      - name: Capture logs if e2e failed
        if: ${{ always() && (steps.e2e.outcome == 'failure' || steps.helm.outcome == 'failure') }}
        run: |
          mkdir ./kind-logs
          kind export logs ./kind-logs
          tar -cvf kind-e2e-logs-${{ matrix.kubernetes-version }}.tar ./kind-logs
      
      - name: Upload logs artifact
        if: ${{ always() && (steps.e2e.outcome == 'failure' || steps.helm.outcome == 'failure') }}
        uses: actions/upload-artifact@v3
        with:
          name: kind-e2e-logs-${{ matrix.kubernetes-version }}.tar
          path: kind-e2e-logs-${{ matrix.kubernetes-version }}.tar
          retention-days: 7
